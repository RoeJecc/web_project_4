!function(){"use strict";var e={formSelector:".modal__profile",inputSelector:".modal__text-input",submitButtonSelector:".modal__form-submit",inactiveButtonClass:"modal__form-submit_disabled",inputErrorClass:".modal__text-input_type_error",errorClass:"modal__input-error_active"},t=document.querySelector(".profile__edit-button"),n=document.querySelector(".profile__add-button"),r=document.querySelector(".profile__avatar-button"),o=document.querySelector(".modal_type_profile"),i=document.querySelector(".modal_type_add-card"),a=document.querySelector(".profile__name"),u=document.querySelector(".profile__occupation"),c=(document.querySelector(".modal_type_delete-card"),document.forms.profile),l=c.elements.name,s=c.elements.occupation,f=(document.querySelector(".modal_type_preview"),document.querySelector(".modal__image"),document.querySelector(".profile__avatar")),p=document.querySelector(".modal__profile_avatar");function h(e,t){document.querySelector(".modal__form-submit").textContent=e?"Saving...":"Save"}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n,r){var o=t.data,i=t.handleCardClick,a=t.handleDeleteClick,u=t.likeHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=o.name,this._link=o.link,this._owner=o.owner,this._userId=n,this._likes=o.likes,this._template=r,this._id=o._id,this._handleDeleteClick=a,this._handleCardClick=i,this._likeHandler=u}var t,n;return t=e,(n=[{key:"id",value:function(){return this._id}},{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".element").cloneNode(!0)}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"showLikes",value:function(){this._cardLikes.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add("element__button_active"):this._likeButton.classList.remove("element__button_active")}},{key:"updateLikes",value:function(e){this._likes=e,this.showLikes()}},{key:"_showDeleteIcon",value:function(){this._owner._id===this._userId&&this._cardTrash.classList.add("element__delete-button_active")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button").addEventListener("click",(function(){return e._likeHandler(e,e._id)})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(){return e._handleDeleteClick([e._id,e._element])})),this._element.querySelector(".element__image").addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._cardTrash=this._element.querySelector(".element__delete-button"),this._element.querySelector(".element__text").textContent=this._name,this._cardImage=this._element.querySelector(".element__image"),this._cardImage.setAttribute("src",this._link),this._cardImage.setAttribute("alt",this._name),this._element.id=this._id,this._cardLikes=this._element.querySelector(".element__likes"),this._likeButton=this._element.querySelector(".element__button"),this._showDeleteIcon(),this.showLikes(),this._element}}])&&d(t.prototype,n),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){return t._container.append(t._renderer(e))}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&y(t.prototype,n),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){27==e.which&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target.classList.contains("modal__close-button")||t.target.classList.contains("modal_open"))&&e.close()}))}}])&&v(t.prototype,n),e}();function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popupElement.querySelector(".modal__image"),t._name=t._popupElement.querySelector(".modal__image-caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._image.src=n,this._image.alt=t,this._name.textContent=t,g(C(a.prototype),"open",this).call(this)}}])&&S(t.prototype,n),a}(b);function O(e){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e,t,n){return(q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e,t){return!t||"object"!==O(t)&&"function"!=typeof t?T(e):t}function T(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t,n=e.popupSelector,r=e.popupSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._popupSubmit=r,t._formElement=t._popupElement.querySelector(".modal__profile"),t._submitEventHandler=t._submitEventHandler.bind(T(t)),t}return t=a,(n=[{key:"_getInputValues",value:function(){return this._popupElement.querySelector(".modal__text-input")?(e=this._popupElement.querySelectorAll(".modal__text-input"),function(e){if(Array.isArray(e))return R(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return R(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?R(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e){return e.value})):null;var e}},{key:"_submitEventHandler",value:function(){var e=this._getInputValues()||this._info;this._popupSubmit(e),this.close()}},{key:"setEventListeners",value:function(){this._popupElement.addEventListener("submit",this._submitEventHandler),q(x(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._formElement.reset(),q(x(a.prototype),"close",this).call(this)}}])&&j(t.prototype,n),a}(b);function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(e,t,n){return(D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function H(e,t){return(H=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function M(e,t){return!t||"object"!==B(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function V(e){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&H(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function a(e){var t=e.popupSelector,n=e.popupSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,{popupSelector:t,popupSubmit:n})}return t=a,(n=[{key:"open",value:function(e){D(V(a.prototype),"open",this).call(this),this._info=e}}])&&U(t.prototype,n),a}(A);function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){var n=t.name,r=t.link,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._occupation=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,link:this._occupation.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.link,r=e.avatar;this._name.textContent=t,this._occupation.textContent=n,this._avatar.src=r}}])&&J(t.prototype,n),e}();function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._inputs.forEach((function(e){e.addEventListener("input",(function(){i._checkInputValidity(e),i._toggleButtonState(i._element,i._inputSelector)}))}))},(r="_setEventListeners")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._element=n,this._inputs=Array.from(this._element.querySelectorAll(this._inputSelector)),this._button=this._element.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showErrorMessage",value:function(e){var t=this._element.querySelector("#"+e.id+"-error");t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._element.querySelector("#"+e.id+"-error");t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(){this._inputs.every((function(e){return e.validity.valid}))?(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1):(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0)}},{key:"disableButton",value:function(){this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0}},{key:"enableValidation",value:function(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&$(t.prototype,n),e}();function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function K(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var W=new(function(){function e(t){var n=t.baseURL,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Error"+e.statusText)}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseURL+"/cards",{headers:this._headers}).then((function(t){return e._checkServerResponse(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseURL+"/users/me",{headers:this._headers}).then((function(t){return e._checkServerResponse(t)}))}},{key:"getAppInfo",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch(this._baseURL+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:n,link:r})}).then((function(e){return t._checkServerResponse(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch(this._baseURL+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return t._checkServerResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch(this._baseURL+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then((function(e){return t._checkServerResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch(this._baseURL+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return t._checkServerResponse(e)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch(this._baseURL+"/users/me/",{method:"PATCH",headers:{authorization:"f3cf689f-e903-4b5b-9d77-2b0b4048d455","Content-Type":"application/json"},body:JSON.stringify({name:n,about:r})}).then((function(e){return t._checkServerResponse(e)}))}},{key:"setUserAvatar",value:function(e){var t=this;return fetch(this._baseURL+"/users/me/avatar/",{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return t._checkServerResponse(e)}))}}])&&G(t.prototype,n),e}())({baseURL:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f3cf689f-e903-4b5b-9d77-2b0b4048d455","Content-Type":"application/json"}}),X=new m({renderer:oe},".elements"),Y=new F(e,o),Z=new F(e,i),ee=new F(e,p);Y.enableValidation(),Z.enableValidation(),ee.enableValidation();var te=new z({name:".profile__name",link:".profile__occupation",avatar:".profile__avatar"}),ne=new A({popupSelector:".modal_type_profile",popupSubmit:function(e){var t,n,r=K(e,2);t=r[0],n=r[1],h(!0),W.setUserInfo({name:t,about:n}).then((function(e){a.textContent=e.name,u.textContent=e.about,ne.close()})).catch((function(e){return console.log(e)})).finally((function(){h(!1)}))}});ne.setEventListeners(),t.addEventListener("click",(function(){var e=te.getUserInfo();l.value=e.name,s.value=e.link,ne.open()}));var re=new L(".modal_type_preview");function oe(e){return new _({data:e,handleCardClick:function(e){var t=e.name,n=e.link;re.open({name:t,link:n})},handleDeleteClick:function(e){ce.open(e)},likeHandler:function(e,t){!function(e,t){e.isLiked()?W.removeLike(t).then((function(t){e.updateLikes(t.likes)})).catch((function(e){return console.log(e)})):W.addLike(t).then((function(t){e.updateLikes(t.likes)})).catch((function(e){return console.log(e)}))}(e,t)}},ae,"#card-template").generateCard()}re.setEventListeners(),W.getAppInfo().then((function(e){var t=K(e,2),n=t[0],r=t[1];ae=n._id,te.setUserInfo({name:n.name,link:n.about,avatar:n.avatar}),X.renderer(r)}));var ie=new A({popupSelector:".modal_type_add-card",popupSubmit:function(e){var t=K(e,2),n=t[0],r=t[1];W.addCard({name:n,link:r}).then((function(e){var t=oe(e);X.addItem(t)})).catch((function(e){return console.log(e)}))}});ie.setEventListeners(),n.addEventListener("click",(function(){Z.disableButton(),ie.open()}));var ae,ue=new A({popupSelector:".modal_type_avatar",popupSubmit:function(e){var t;t=K(e,1)[0],event.preventDefault(),h(!0),W.setUserAvatar(t).then((function(e){f.src=e.avatar,ue.close()})).finally((function(){h(!1)}))}});ue.setEventListeners(),r.addEventListener("click",(function(){ee.disableButton(),ue.open()}));var ce=new N({popupSelector:".modal_type_delete-card",popupSubmit:function(e){var t=K(e,2),n=t[0],r=t[1];event.preventDefault(),h(!0),W.removeCard(n).then((function(){ce.close(),r.remove()})).catch((function(e){return console.log(e)})).finally((function(){h(!1)}))}});ce.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIl0sIm5hbWVzIjpbInZhbGlkYXRpb25Gb3JtIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJvcGVuRWRpdFByb2ZpbGVNb2RhbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZE1vZGFsIiwiYXZhdGFyTW9kYWwiLCJlZGl0UHJvZmlsZU1vZGFsIiwiYWRkTW9kYWxQb3B1cCIsInByb2ZpbGVOYW1lIiwicHJvZmlsZU9jY3VwYXRpb24iLCJwcm9maWxlRm9ybSIsImZvcm1zIiwicHJvZmlsZSIsInByb2ZpbGVGb3JtTmFtZUlucHV0IiwiZWxlbWVudHMiLCJuYW1lIiwicHJvZmlsZUZvcm1PY2N1cGF0aW9uSW5wdXQiLCJvY2N1cGF0aW9uIiwicHJvZmlsZUF2YXRhciIsImF2YXRhckZvcm0iLCJsb2FkaW5nTW9kYWwiLCJpc0xvYWRpbmciLCJtb2RhbCIsInRleHRDb250ZW50IiwiQ2FyZCIsInVzZXJJZCIsInRlbXBsYXRlIiwiZGF0YSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwibGlrZUhhbmRsZXIiLCJ0aGlzIiwiX25hbWUiLCJfbGluayIsImxpbmsiLCJfb3duZXIiLCJvd25lciIsIl91c2VySWQiLCJfbGlrZXMiLCJsaWtlcyIsIl90ZW1wbGF0ZSIsIl9pZCIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfbGlrZUhhbmRsZXIiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwic29tZSIsIml0ZW0iLCJfY2FyZExpa2VzIiwibGVuZ3RoIiwiaXNMaWtlZCIsIl9saWtlQnV0dG9uIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwic2hvd0xpa2VzIiwiX2NhcmRUcmFzaCIsIl9lbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkSW1hZ2UiLCJzZXRBdHRyaWJ1dGUiLCJpZCIsIl9zaG93RGVsZXRlSWNvbiIsImNvbnRhaW5lciIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImNhcmRzIiwiZm9yRWFjaCIsImFwcGVuZCIsImNhcmRFbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImUiLCJ3aGljaCIsImNsb3NlIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhJbWFnZSIsIl9pbWFnZSIsInNyYyIsImFsdCIsIlBvcHVwV2l0aEZvcm0iLCJwb3B1cFN1Ym1pdCIsIl9wb3B1cFN1Ym1pdCIsIl9mb3JtRWxlbWVudCIsIl9zdWJtaXRFdmVudEhhbmRsZXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWFwIiwiaW5wdXQiLCJ2YWx1ZSIsImlucHV0U3VibWl0VmFsdWUiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfaW5mbyIsInJlc2V0IiwiUG9wdXBXaXRoQ29uZmlybSIsImNhcmRJbmZvIiwiVXNlckluZm8iLCJhdmF0YXIiLCJfb2NjdXBhdGlvbiIsIl9hdmF0YXIiLCJ1c2VyRGF0YSIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtRWxlbWVudCIsIl9pbnB1dHMiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIkFycmF5IiwiZnJvbSIsIl9idXR0b24iLCJlcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlRXJyb3JNZXNzYWdlIiwiX3Nob3dFcnJvck1lc3NhZ2UiLCJldmVyeSIsImRpc2FibGVkIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImFwaSIsImJhc2VVUkwiLCJoZWFkZXJzIiwiX2Jhc2VVUkwiLCJfaGVhZGVycyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXNUZXh0IiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrU2VydmVyUmVzcG9uc2UiLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElEIiwiYWJvdXQiLCJhdXRob3JpemF0aW9uIiwiY2FyZFNlY3Rpb24iLCJTZWN0aW9uIiwicmVuZGVyQ2FyZCIsImVkaXRGb3JtVmFsaWRhdG9yIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJhdmF0YXJGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsInVzZXJJbmZvIiwiZWRpdFBvcHVwIiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmaW5hbGx5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJvcGVuIiwiaW1hZ2VQb3B1cCIsImRlbGV0ZVBvcHVwIiwicmVtb3ZlTGlrZSIsInVwZGF0ZUxpa2VzIiwiYWRkTGlrZSIsImNhcmRMaWtlQ291bnRlciIsImdlbmVyYXRlQ2FyZCIsImdldEFwcEluZm8iLCJjYXJkTGlzdERldGFpbCIsImFkZENhcmRQb3B1cCIsImFkZENhcmQiLCJuZXdDYXJkIiwiYWRkSXRlbSIsImRpc2FibGVCdXR0b24iLCJhdmF0YXJQb3B1cCIsInNldFVzZXJBdmF0YXIiLCJlbGVtZW50IiwicmVtb3ZlQ2FyZCJdLCJtYXBwaW5ncyI6InlCQUFBLElBQU1BLEVBQWlCLENBQ3JCQyxhQUFjLGtCQUNkQyxjQUFlLHFCQUNmQyxxQkFBc0Isc0JBQ3RCQyxvQkFBcUIsOEJBQ3JCQyxnQkFBaUIsZ0NBQ2pCQyxXQUFZLDZCQUlSQyxFQUF1QkMsU0FBU0MsY0FBYyx5QkFDOUNDLEVBQVdGLFNBQVNDLGNBQWMsd0JBQ2xDRSxFQUFjSCxTQUFTQyxjQUFjLDJCQUNyQ0csRUFBbUJKLFNBQVNDLGNBQWMsdUJBQzFDSSxFQUFnQkwsU0FBU0MsY0FBYyx3QkFDdkNLLEVBQWNOLFNBQVNDLGNBQWMsa0JBQ3JDTSxFQUFvQlAsU0FBU0MsY0FBYyx3QkFFM0NPLEdBRGNSLFNBQVNDLGNBQWMsMkJBQ3ZCRCxTQUFTUyxNQUFNQyxTQUM3QkMsRUFBdUJILEVBQVlJLFNBQVNDLEtBQzVDQyxFQUE2Qk4sRUFBWUksU0FBU0csV0FJbERDLEdBRmVoQixTQUFTQyxjQUFjLHVCQUN2QkQsU0FBU0MsY0FBYyxpQkFDdEJELFNB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QUFRRCxNQUVyQmxCLE9BQU0sU0FBQ0MsR0FBRCxPQUFTQyxRQUFRQyxJQUFJRixTQUdsQ2UsR0FBYVgsb0JBQ2J6SyxFQUFTdUQsaUJBQWlCLFNBQVMsV0FDakN1RyxFQUFrQjBCLGdCQUNsQkosR0FBYVYsVUFJZixJQWFJckosR0FiRW9LLEdBQWMsSUFBSW5HLEVBQWMsQ0FDcENkLGNBQWUscUJBQ2ZlLFlBQWEsWUFjZixJQUFzQmUsSUFkTyxVQWUzQjBCLE1BQU1DLGlCQUNOakgsR0FBYSxHQUVia0gsRUFDR3dELGNBQWNwRixHQUNkd0MsTUFBSyxTQUFDUCxHQUNMekgsTUFBb0J5SCxFQUFJakMsT0FDeEJtRixHQUFZMUcsV0FFYnlGLFNBQVEsV0FDUHhKLEdBQWEsU0FyQm5CeUssR0FBWWhCLG9CQUVaeEssRUFBWXNELGlCQUFpQixTQUFTLFdBQ3BDd0csR0FBb0J5QixnQkFDcEJDLEdBQVlmLFVBc0JkLElBQU1FLEdBQWMsSUFBSXpFLEVBQWlCLENBQ3ZDM0IsY0FBZSwwQkFDZmUsWUFBYSxZQUF1QixhQUFyQmdFLEVBQXFCLEtBQWJvQyxFQUFhLEtBQ2xDM0QsTUFBTUMsaUJBQ05qSCxHQUFhLEdBRWJrSCxFQUNHMEQsV0FBV3JDLEdBQ1hULE1BQUssV0FDSjhCLEdBQVk3RixRQUNaNEcsRUFBUXhJLFlBRVRpSCxPQUFNLFNBQUNDLEdBQUQsT0FBU0MsUUFBUUMsSUFBSUYsTUFDM0JHLFNBQVEsV0FDUHhKLEdBQWEsU0FJckI0SixHQUFZSCxvQiIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdmFsaWRhdGlvbkZvcm0gPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fcHJvZmlsZVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX190ZXh0LWlucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtLXN1Ym1pdFwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2Zvcm0tc3VibWl0X2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIi5tb2RhbF9fdGV4dC1pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG4vLyBEZWNsYXJhdGlvbnNcclxuY29uc3Qgb3BlbkVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBhZGRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgYXZhdGFyTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1idXR0b25cIik7XHJcbmNvbnN0IGVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX3R5cGVfcHJvZmlsZVwiKTtcclxuY29uc3QgYWRkTW9kYWxQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfdHlwZV9hZGQtY2FyZFwiKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbmNvbnN0IHByb2ZpbGVPY2N1cGF0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19vY2N1cGF0aW9uXCIpO1xyXG5jb25zdCBkZWxldGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfdHlwZV9kZWxldGUtY2FyZFwiKTtcclxuY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5mb3Jtcy5wcm9maWxlO1xyXG5jb25zdCBwcm9maWxlRm9ybU5hbWVJbnB1dCA9IHByb2ZpbGVGb3JtLmVsZW1lbnRzLm5hbWU7XHJcbmNvbnN0IHByb2ZpbGVGb3JtT2NjdXBhdGlvbklucHV0ID0gcHJvZmlsZUZvcm0uZWxlbWVudHMub2NjdXBhdGlvbjtcclxuY29uc3QgZXNjS2V5ID0gMjc7XHJcbmNvbnN0IHByZXZpZXdNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfdHlwZV9wcmV2aWV3XCIpO1xyXG5jb25zdCBwcmV2aWV3SW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xyXG5jb25zdCBhdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fcHJvZmlsZV9hdmF0YXJcIik7XHJcblxyXG4vLyBMb2FkaW5nIFVJXHJcbmZ1bmN0aW9uIGxvYWRpbmdNb2RhbChpc0xvYWRpbmcsIG1vZGFsKXtcclxuICBpZihpc0xvYWRpbmcpIHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybS1zdWJtaXQnKS50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgfSBlbHNlIHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fZm9ybS1zdWJtaXQnKS50ZXh0Q29udGVudCA9IFwiU2F2ZVwiO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRXhwb3J0c1xyXG5cclxuZXhwb3J0IHtcclxuICBhdmF0YXJGb3JtLFxyXG4gIGRlbGV0ZU1vZGFsLFxyXG4gIHByb2ZpbGVBdmF0YXIsXHJcbiAgb3BlbkVkaXRQcm9maWxlTW9kYWwsXHJcbiAgYWRkTW9kYWwsXHJcbiAgZWRpdFByb2ZpbGVNb2RhbCxcclxuICBhZGRNb2RhbFBvcHVwLFxyXG4gIHByb2ZpbGVOYW1lLFxyXG4gIHByb2ZpbGVPY2N1cGF0aW9uLFxyXG4gIHByb2ZpbGVGb3JtLFxyXG4gIHByb2ZpbGVGb3JtTmFtZUlucHV0LFxyXG4gIHByb2ZpbGVGb3JtT2NjdXBhdGlvbklucHV0LFxyXG4gIHZhbGlkYXRpb25Gb3JtLFxyXG4gIHByZXZpZXdNb2RhbCxcclxuICBwcmV2aWV3SW1hZ2UsXHJcbiAgZXNjS2V5LFxyXG4gIGF2YXRhck1vZGFsLFxyXG4gIGxvYWRpbmdNb2RhbFxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7ZGF0YSwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVEZWxldGVDbGljaywgbGlrZUhhbmRsZXJ9LHVzZXJJZCwgdGVtcGxhdGUpIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fb3duZXIgPSBkYXRhLm93bmVyO1xyXG4gICAgICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XHJcblxyXG4gICAgICAgIHRoaXMuX3RlbXBsYXRlID0gdGVtcGxhdGU7XHJcbiAgICAgICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrXHJcblxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuXHJcbiAgICAgICAgdGhpcy5fbGlrZUhhbmRsZXIgPSBsaWtlSGFuZGxlclxyXG4gICAgfVxyXG5cclxuICAgIGlkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50JykuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgICAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgaXNMaWtlZCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saWtlcy5zb21lKGl0ZW0gPT4gaXRlbS5faWQgPT09IHRoaXMuX3VzZXJJZCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd0xpa2VzKCl7XHJcbiAgICAgICAgdGhpcy5fY2FyZExpa2VzLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgICAgIGlmICh0aGlzLmlzTGlrZWQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2VsZW1lbnRfX2J1dHRvbl9hY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRfX2J1dHRvbl9hY3RpdmUnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlTGlrZXMobGlrZXMpIHtcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xyXG4gICAgICAgIHRoaXMuc2hvd0xpa2VzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX3Nob3dEZWxldGVJY29uKCl7IFxyXG4gICAgICAgIGlmKHRoaXMuX293bmVyLl9pZCA9PT0gdGhpcy5fdXNlcklkKXsgXHJcbiAgICAgICAgICAgIHRoaXMuX2NhcmRUcmFzaC5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19kZWxldGUtYnV0dG9uX2FjdGl2ZScpOyBcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuX2xpa2VIYW5kbGVyKHRoaXMsIHRoaXMuX2lkKSk7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fZGVsZXRlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2soW3RoaXMuX2lkLCB0aGlzLl9lbGVtZW50XSkpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soe25hbWU6IHRoaXMuX25hbWUsIGxpbms6IHRoaXMuX2xpbmt9KSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NhcmRUcmFzaCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2RlbGV0ZS1idXR0b24nKTtcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdGV4dCcpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKTtcclxuXHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy5fbGluayk7XHJcbiAgICAgICAgdGhpcy5fY2FyZEltYWdlLnNldEF0dHJpYnV0ZSgnYWx0JywgdGhpcy5fbmFtZSk7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQuaWQgPSB0aGlzLl9pZDtcclxuXHJcbiAgICAgICAgdGhpcy5fY2FyZExpa2VzID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZXMnKTtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fYnV0dG9uJyk7XHJcblxyXG4gICAgICAgIHRoaXMuX3Nob3dEZWxldGVJY29uKCk7XHJcbiAgICAgICAgdGhpcy5zaG93TGlrZXMoKTtcclxuXHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gICAgfVxyXG59IiwiY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lcikge1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcmVyKGNhcmRzKSB7XHJcbiAgICAgICAgY2FyZHMuZm9yRWFjaCgoaXRlbSkgPT4gdGhpcy5fY29udGFpbmVyLmFwcGVuZCh0aGlzLl9yZW5kZXJlcihpdGVtKSkpO1xyXG4gICAgfVxyXG4gICAgYWRkSXRlbShjYXJkRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGNhcmRFbGVtZW50KTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247IiwiaW1wb3J0IHsgZXNjS2V5IH0gZnJvbSBcIi4vdXRpbHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtb2RhbF9vcGVuJyk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWxfb3BlbicpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlKGUpIHtcclxuICAgICAgICBpZihlLndoaWNoID09IGVzY0tleSkge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWxfX2Nsb3NlLWJ1dHRvbicpIHx8IGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWxfb3BlbicpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pICAgICBcclxuICAgIH1cclxufTtcclxuXHJcblxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgICAgICB0aGlzLl9uYW1lID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLWNhcHRpb25cIik7XHJcbiAgICB9XHJcblxyXG4gICAgb3Blbih7bmFtZSwgbGlua30pIHtcclxuICAgICAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rXHJcbiAgICAgICAgdGhpcy5faW1hZ2UuYWx0ID0gbmFtZVxyXG4gICAgICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBuYW1lXHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3Ioe3BvcHVwU2VsZWN0b3IsIHBvcHVwU3VibWl0fSkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwU3VibWl0ID0gcG9wdXBTdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fcHJvZmlsZVwiKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRFdmVudEhhbmRsZXIgPSB0aGlzLl9zdWJtaXRFdmVudEhhbmRsZXIuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgaWYoIXRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX3RleHQtaW5wdXQnKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbLi4udGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbF9fdGV4dC1pbnB1dCcpXS5tYXAoaW5wdXQgPT4gaW5wdXQudmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBfc3VibWl0RXZlbnRIYW5kbGVyKCl7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgaW5wdXRTdWJtaXRWYWx1ZSA9IHRoaXMuX2dldElucHV0VmFsdWVzKCkgfHwgdGhpcy5faW5mbztcclxuICAgICAgICB0aGlzLl9wb3B1cFN1Ym1pdChpbnB1dFN1Ym1pdFZhbHVlKTtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX3N1Ym1pdEV2ZW50SGFuZGxlcik7XHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5yZXNldCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn0iLCJpbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtIGV4dGVuZHMgUG9wdXBXaXRoRm9ybSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7cG9wdXBTZWxlY3RvciwgcG9wdXBTdWJtaXR9KXtcclxuICAgICAgICBzdXBlcih7cG9wdXBTZWxlY3RvciwgcG9wdXBTdWJtaXR9KTtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKGNhcmRJbmZvKXtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICAgICAgdGhpcy5faW5mbyA9IGNhcmRJbmZvO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGxpbmssIGF2YXRhciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lKTtcclxuICAgIHRoaXMuX29jY3VwYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxpbmspO1xyXG4gICAgdGhpcy5fYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICBsaW5rOiB0aGlzLl9vY2N1cGF0aW9uLnRleHRDb250ZW50LFxyXG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhci5zcmMsXHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8odXNlckRhdGEpIHtcclxuICAgIGNvbnN0eyBuYW1lLCBsaW5rLCBhdmF0YXJ9ID0gdXNlckRhdGE7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX29jY3VwYXRpb24udGV4dENvbnRlbnQgPSBsaW5rO1xyXG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGF2YXRhcjtcclxuICB9XHJcbn1cclxuIiwiLy8gQ2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG5cclxuICAgIHRoaXMuX2lucHV0cyA9IEFycmF5LmZyb20oXHJcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIHRoaXMuX2J1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfc2hvd0Vycm9yTWVzc2FnZShpbnB1dCkge1xyXG4gICAgY29uc3QgZXJyb3IgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIgKyBpbnB1dC5pZCArIFwiLWVycm9yXCIpO1xyXG5cclxuICAgIGVycm9yLnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvci5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVFcnJvck1lc3NhZ2UoaW5wdXQpIHtcclxuICAgIGNvbnN0IGVycm9yID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiICsgaW5wdXQuaWQgKyBcIi1lcnJvclwiKTtcclxuXHJcbiAgICBlcnJvci50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICBlcnJvci5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCkge1xyXG4gICAgaWYgKGlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX2hpZGVFcnJvck1lc3NhZ2UoaW5wdXQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc2hvd0Vycm9yTWVzc2FnZShpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGNvbnN0IGlzVmFsaWQgPSB0aGlzLl9pbnB1dHMuZXZlcnkoKGlucHV0KSA9PiBpbnB1dC52YWxpZGl0eS52YWxpZCk7XHJcblxyXG4gICAgaWYgKGlzVmFsaWQpIHtcclxuICAgICAgdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBkaXNhYmxlQnV0dG9uKCl7XHJcbiAgICB0aGlzLl9idXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9lbGVtZW50LCB0aGlzLl9pbnB1dFNlbGVjdG9yKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldmVudCkgPT4ge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG4iLCIvLyBJbXBvcnRzXHJcblxyXG5pbXBvcnQgXCIuLi9zdHlsZXMvaW5kZXguY3NzXCI7IC8vIGFkZCBpbXBvcnQgb2YgdGhlIG1haW4gc3R5bGVzaGVldHMgZmlsZVxyXG5pbXBvcnQge1xyXG4gIGRlbGV0ZU1vZGFsLFxyXG4gIG9wZW5FZGl0UHJvZmlsZU1vZGFsLFxyXG4gIGFkZE1vZGFsLFxyXG4gIGVkaXRQcm9maWxlTW9kYWwsXHJcbiAgYWRkTW9kYWxQb3B1cCxcclxuICBwcm9maWxlTmFtZSxcclxuICBwcm9maWxlT2NjdXBhdGlvbixcclxuICBwcm9maWxlRm9ybU5hbWVJbnB1dCxcclxuICBwcm9maWxlRm9ybU9jY3VwYXRpb25JbnB1dCxcclxuICB2YWxpZGF0aW9uRm9ybSxcclxuICBwcm9maWxlQXZhdGFyLFxyXG4gIGF2YXRhck1vZGFsLFxyXG4gIGF2YXRhckZvcm0sXHJcbiAgbG9hZGluZ01vZGFsLFxyXG59IGZyb20gXCIuLi9jb21wb25lbnRzL3V0aWxzLmpzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG4vLyBEZWNsYXJlIEFQSVxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVVJMOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImYzY2Y2ODlmLWU5MDMtNGI1Yi05ZDc3LTJiMGI0MDQ4ZDQ1NVwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG4vLyBDYXJkIFNlY3Rpb25cclxuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICByZW5kZXJlcjogcmVuZGVyQ2FyZCxcclxuICB9LFxyXG4gIFwiLmVsZW1lbnRzXCJcclxuKTtcclxuXHJcbi8vIEZvcm0gVmFsaWRhdGlvblxyXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Gb3JtLCBlZGl0UHJvZmlsZU1vZGFsKTtcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uRm9ybSwgYWRkTW9kYWxQb3B1cCk7XHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uRm9ybSwgYXZhdGFyRm9ybSk7XHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lOiBcIi5wcm9maWxlX19uYW1lXCIsXHJcbiAgbGluazogXCIucHJvZmlsZV9fb2NjdXBhdGlvblwiLFxyXG4gIGF2YXRhcjogXCIucHJvZmlsZV9fYXZhdGFyXCIsXHJcbn0pO1xyXG5cclxuLy8gRWRpdCBQcm9maWxlIFBvcHVwXHJcblxyXG5mdW5jdGlvbiBoYW5kbGVFZGl0QnV0dG9uKG5hbWUsIGxpbmspIHtcclxuICBsb2FkaW5nTW9kYWwodHJ1ZSwgZWRpdFBvcHVwKTtcclxuICBhcGlcclxuICAgIC5zZXRVc2VySW5mbyh7IG5hbWU6IG5hbWUsIGFib3V0OiBsaW5rIH0pXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gcmVzLm5hbWU7XHJcbiAgICAgIHByb2ZpbGVPY2N1cGF0aW9uLnRleHRDb250ZW50ID0gcmVzLmFib3V0O1xyXG5cclxuICAgICAgZWRpdFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGxvYWRpbmdNb2RhbChmYWxzZSwgZWRpdFBvcHVwKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogXCIubW9kYWxfdHlwZV9wcm9maWxlXCIsXHJcbiAgcG9wdXBTdWJtaXQ6IChbbmFtZSwgbGlua10pID0+IHtcclxuICAgIGhhbmRsZUVkaXRCdXR0b24obmFtZSwgbGluayk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5lZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbm9wZW5FZGl0UHJvZmlsZU1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgdXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVGb3JtTmFtZUlucHV0LnZhbHVlID0gdXNlckRhdGEubmFtZTtcclxuICBwcm9maWxlRm9ybU9jY3VwYXRpb25JbnB1dC52YWx1ZSA9IHVzZXJEYXRhLmxpbms7XHJcbiAgZWRpdFBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG4vLyBQcmV2aWV3IEltYWdlIFBvcHVwXHJcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIubW9kYWxfdHlwZV9wcmV2aWV3XCIpO1xyXG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGRhdGEpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICB7XHJcbiAgICAgIGRhdGEsXHJcbiAgICAgIGhhbmRsZUNhcmRDbGljazogKHsgbmFtZSwgbGluayB9KSA9PiB7XHJcbiAgICAgICAgaW1hZ2VQb3B1cC5vcGVuKHsgbmFtZSwgbGluayB9KTtcclxuICAgICAgfSxcclxuICAgICAgaGFuZGxlRGVsZXRlQ2xpY2s6IChjYXJkSW5mbykgPT4ge1xyXG4gICAgICAgIGRlbGV0ZVBvcHVwLm9wZW4oY2FyZEluZm8pO1xyXG4gICAgICB9LFxyXG4gICAgICBsaWtlSGFuZGxlcjogKGNhcmRFbGVtZW50LCBjYXJkSUQpID0+IHtcclxuICAgICAgICBjYXJkTGlrZUNvdW50ZXIoY2FyZEVsZW1lbnQsIGNhcmRJRCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgdXNlcklkLFxyXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuLy8gQ2FyZCBMaWtlc1xyXG5mdW5jdGlvbiBjYXJkTGlrZUNvdW50ZXIoY2FyZEVsZW1lbnQsIGNhcmRJRCkge1xyXG4gIGlmIChjYXJkRWxlbWVudC5pc0xpa2VkKCkpIHtcclxuICAgIGFwaVxyXG4gICAgICAucmVtb3ZlTGlrZShjYXJkSUQpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaVxyXG4gICAgICAuYWRkTGlrZShjYXJkSUQpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBjYXJkRWxlbWVudC51cGRhdGVMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBTZXQgVXNlciBJbmZvXHJcbmFwaS5nZXRBcHBJbmZvKCkudGhlbigoW3VzZXJEYXRhLCBjYXJkTGlzdERldGFpbF0pID0+IHtcclxuICB1c2VySWQgPSB1c2VyRGF0YS5faWQ7XHJcbiAgdXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgbmFtZTogdXNlckRhdGEubmFtZSxcclxuICAgIGxpbms6IHVzZXJEYXRhLmFib3V0LFxyXG4gICAgYXZhdGFyOiB1c2VyRGF0YS5hdmF0YXIsXHJcbiAgfSk7XHJcbiAgY2FyZFNlY3Rpb24ucmVuZGVyZXIoY2FyZExpc3REZXRhaWwpO1xyXG59KTtcclxuXHJcbi8vQWRkIENhcmQgUG9wdXBcclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiLm1vZGFsX3R5cGVfYWRkLWNhcmRcIixcclxuICBwb3B1cFN1Ym1pdDogKFtuYW1lLCBsaW5rXSkgPT4ge1xyXG4gICAgYXBpXHJcbiAgICAgIC5hZGRDYXJkKHsgbmFtZSwgbGluayB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbmV3Q2FyZCA9IHJlbmRlckNhcmQocmVzKTtcclxuICAgICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKG5ld0NhcmQpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgfSxcclxufSk7XHJcbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hZGRNb2RhbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNhcmRGb3JtVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcclxuICBhZGRDYXJkUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbi8vQXZhdGFyIFBvcHVwXHJcbmNvbnN0IGF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IFwiLm1vZGFsX3R5cGVfYXZhdGFyXCIsXHJcbiAgcG9wdXBTdWJtaXQ6IChbYXZhdGFyXSkgPT4ge1xyXG4gICAgaGFuZGxlQXZhdGFyKGF2YXRhcik7XHJcbiAgfSxcclxufSk7XHJcbmF2YXRhclBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5hdmF0YXJNb2RhbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGF2YXRhckZvcm1WYWxpZGF0b3IuZGlzYWJsZUJ1dHRvbigpO1xyXG4gIGF2YXRhclBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG5sZXQgdXNlcklkO1xyXG5cclxuLy8gQXZhdGFyIFBvcHVwIEhhbmRsZXJcclxuZnVuY3Rpb24gaGFuZGxlQXZhdGFyKGF2YXRhcikge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgbG9hZGluZ01vZGFsKHRydWUsIHByb2ZpbGVBdmF0YXIpO1xyXG5cclxuICBhcGlcclxuICAgIC5zZXRVc2VyQXZhdGFyKGF2YXRhcilcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSByZXMuYXZhdGFyO1xyXG4gICAgICBhdmF0YXJQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgbG9hZGluZ01vZGFsKGZhbHNlLCBwcm9maWxlQXZhdGFyKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyBEZWxldGUgQ2FyZCBQb3B1cFxyXG5jb25zdCBkZWxldGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtKHtcclxuICBwb3B1cFNlbGVjdG9yOiBcIi5tb2RhbF90eXBlX2RlbGV0ZS1jYXJkXCIsXHJcbiAgcG9wdXBTdWJtaXQ6IChbY2FyZElELCBlbGVtZW50XSkgPT4ge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGxvYWRpbmdNb2RhbCh0cnVlLCBkZWxldGVNb2RhbCk7XHJcblxyXG4gICAgYXBpXHJcbiAgICAgIC5yZW1vdmVDYXJkKGNhcmRJRClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZVBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgZWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBsb2FkaW5nTW9kYWwoZmFsc2UsIGRlbGV0ZU1vZGFsKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcbmRlbGV0ZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVVJMLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVUkwgPSBiYXNlVVJMO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpe1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChcIkVycm9yXCIgKyByZXMuc3RhdHVzVGV4dClcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVVJMICsgXCIvY2FyZHNcIiwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcylcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVVJMICsgXCIvdXNlcnMvbWVcIiwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcylcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgfVxyXG5cclxuICBnZXRBcHBJbmZvKCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldFVzZXJJbmZvKCksIHRoaXMuZ2V0SW5pdGlhbENhcmRzKCldKTtcclxuICB9XHJcblxyXG4gIGFkZENhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVVJMICsgXCIvY2FyZHNcIiwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZSxcclxuICAgICAgICBsaW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpXHJcbiAgICAgIH0pXHJcbiAgICAgIFxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2FyZChjYXJkSUQpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGZldGNoKHRoaXMuX2Jhc2VVUkwgKyBcIi9jYXJkcy9cIiArIGNhcmRJRCwge1xyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICB9KVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIHJldHVybiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcylcclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGFkZExpa2UoY2FyZElEKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBmZXRjaCh0aGlzLl9iYXNlVVJMICsgXCIvY2FyZHMvbGlrZXMvXCIgKyBjYXJkSUQsIHtcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgfSlcclxuICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVMaWtlKGNhcmRJRCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgZmV0Y2godGhpcy5fYmFzZVVSTCArIFwiL2NhcmRzL2xpa2VzL1wiICsgY2FyZElELCB7XHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2NoZWNrU2VydmVyUmVzcG9uc2UocmVzKVxyXG4gICAgICAgIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVSTCArIFwiL3VzZXJzL21lL1wiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJmM2NmNjg5Zi1lOTAzLTRiNWItOWQ3Ny0yYjBiNDA0OGQ0NTVcIixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgYWJvdXQsXHJcbiAgICAgIH0pLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcylcclxuICAgICAgfSlcclxuICB9XHJcblxyXG4gIHNldFVzZXJBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVSTCArIFwiL3VzZXJzL21lL2F2YXRhci9cIiwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcixcclxuICAgICAgfSksXHJcbiAgICB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoZWNrU2VydmVyUmVzcG9uc2UocmVzKVxyXG4gICAgICB9KVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9